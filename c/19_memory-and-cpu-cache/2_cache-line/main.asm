Dump of assembler code for function main:
   0x00000000000010f0 <+0>:	push   r15
   0x00000000000010f2 <+2>:	xor    edi,edi
   0x00000000000010f4 <+4>:	push   r14
   0x00000000000010f6 <+6>:	push   r13
   0x00000000000010f8 <+8>:	push   r12
   0x00000000000010fa <+10>:	push   rbp
   0x00000000000010fb <+11>:	push   rbx
   0x00000000000010fc <+12>:	sub    rsp,0x8
   0x0000000000001100 <+16>:	call   0x1090 <time@plt>
   0x0000000000001105 <+21>:	mov    rdi,rax
   0x0000000000001108 <+24>:	call   0x1070 <srand@plt>
   0x000000000000110d <+29>:	lea    rsi,[rip+0xef0]        # 0x2004
   0x0000000000001114 <+36>:	lea    rdi,[rip+0xeeb]        # 0x2006
   0x000000000000111b <+43>:	call   0x10b0 <fopen@plt>
   0x0000000000001120 <+48>:	mov    r12,rax
   0x0000000000001123 <+51>:	test   rax,rax
   0x0000000000001126 <+54>:	je     0x132f <main+575>
   0x000000000000112c <+60>:	mov    rcx,r12
   0x000000000000112f <+63>:	mov    edx,0x17
   0x0000000000001134 <+68>:	mov    esi,0x1
   0x0000000000001139 <+73>:	mov    ebx,0x1
   0x000000000000113e <+78>:	lea    rdi,[rip+0xee2]        # 0x2027
   0x0000000000001145 <+85>:	lea    r13,[rip+0xef3]        # 0x203f
   0x000000000000114c <+92>:	call   0x10c0 <fwrite@plt>
   0x0000000000001151 <+97>:	mov    edi,0x20000000
   0x0000000000001156 <+102>:	call   0x10a0 <malloc@plt>
   0x000000000000115b <+107>:	mov    rbp,rax
   0x000000000000115e <+110>:	lea    r14,[rax+0x20000000]
   0x0000000000001165 <+117>:	mov    r15,rax
   0x0000000000001168 <+120>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x0000000000001170 <+128>:	call   0x10d0 <rand@plt>
   0x0000000000001175 <+133>:	add    r15,0x4
   0x0000000000001179 <+137>:	mov    edx,eax
   0x000000000000117b <+139>:	cdqe   
   0x000000000000117d <+141>:	imul   rax,rax,0xffffffff80000005
   0x0000000000001184 <+148>:	mov    ecx,edx
   0x0000000000001186 <+150>:	sar    ecx,0x1f
   0x0000000000001189 <+153>:	shr    rax,0x20
   0x000000000000118d <+157>:	add    eax,edx
   0x000000000000118f <+159>:	sar    eax,0x1d
   0x0000000000001192 <+162>:	sub    eax,ecx
   0x0000000000001194 <+164>:	imul   eax,eax,0x3ffffffe
   0x000000000000119a <+170>:	sub    edx,eax
   0x000000000000119c <+172>:	mov    DWORD PTR [r15-0x4],edx
   0x00000000000011a0 <+176>:	cmp    r15,r14
   0x00000000000011a3 <+179>:	jne    0x1170 <main+128>
   0x00000000000011a5 <+181>:	call   0x1040 <clock@plt>
   0x00000000000011aa <+186>:	lea    rsi,[rbp+0x80]
   0x00000000000011b1 <+193>:	mov    rcx,rbp
   0x00000000000011b4 <+196>:	mov    r15,rax
   0x00000000000011b7 <+199>:	cmp    ebx,0x1
   0x00000000000011ba <+202>:	jne    0x1254 <main+356>
   0x00000000000011c0 <+208>:	mov    rax,rbp
   0x00000000000011c3 <+211>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x00000000000011c8 <+216>:	mov    edx,DWORD PTR [rcx]
   0x00000000000011ca <+218>:	add    DWORD PTR [rax],edx
   0x00000000000011cc <+220>:	add    rax,0x4
   0x00000000000011d0 <+224>:	cmp    rax,r14
   0x00000000000011d3 <+227>:	jne    0x11c8 <main+216>
   0x00000000000011d5 <+229>:	add    rcx,0x4
   0x00000000000011d9 <+233>:	cmp    rcx,rsi
   0x00000000000011dc <+236>:	jne    0x11c0 <main+208>
   0x00000000000011de <+238>:	call   0x1040 <clock@plt>
   0x00000000000011e3 <+243>:	sub    rax,r15
   0x00000000000011e6 <+246>:	mov    r14,rax
   0x00000000000011e9 <+249>:	call   0x10d0 <rand@plt>
   0x00000000000011ee <+254>:	pxor   xmm0,xmm0
   0x00000000000011f2 <+258>:	mov    rsi,r13
   0x00000000000011f5 <+261>:	mov    rdi,r12
   0x00000000000011f8 <+264>:	and    eax,0x7ffffff
   0x00000000000011fd <+269>:	test   r14,r14
   0x0000000000001200 <+272>:	mov    edx,0x1
   0x0000000000001205 <+277>:	mov    ecx,DWORD PTR [rbp+rax*4+0x0]
   0x0000000000001209 <+281>:	lea    rax,[r14+0x1f]
   0x000000000000120d <+285>:	cmovns rax,r14
   0x0000000000001211 <+289>:	sar    rax,0x5
   0x0000000000001215 <+293>:	cvtsi2sd xmm0,rax
   0x000000000000121a <+298>:	mov    eax,0x1
   0x000000000000121f <+303>:	divsd  xmm0,QWORD PTR [rip+0xe31]        # 0x2058
   0x0000000000001227 <+311>:	call   0x1080 <fprintf@plt>
   0x000000000000122c <+316>:	lea    rdi,[rip+0xe1a]        # 0x204d
   0x0000000000001233 <+323>:	mov    edx,0x8000000
   0x0000000000001238 <+328>:	xor    eax,eax
   0x000000000000123a <+330>:	mov    esi,0x1
   0x000000000000123f <+335>:	call   0x1060 <printf@plt>
   0x0000000000001244 <+340>:	mov    rdi,rbp
   0x0000000000001247 <+343>:	call   0x1030 <free@plt>
   0x000000000000124c <+348>:	add    ebx,0x1
   0x000000000000124f <+351>:	jmp    0x1151 <main+97>
   0x0000000000001254 <+356>:	movsxd rdi,ebx
   0x0000000000001257 <+359>:	lea    r8,[rbp+0x80]
   0x000000000000125e <+366>:	mov    rsi,rbp
   0x0000000000001261 <+369>:	shl    rdi,0x2
   0x0000000000001265 <+373>:	nop    DWORD PTR [rax]
   0x0000000000001268 <+376>:	mov    rax,rbp
   0x000000000000126b <+379>:	xor    edx,edx
   0x000000000000126d <+381>:	nop    DWORD PTR [rax]
   0x0000000000001270 <+384>:	add    edx,ebx
   0x0000000000001272 <+386>:	mov    ecx,DWORD PTR [rsi]
   0x0000000000001274 <+388>:	add    DWORD PTR [rax],ecx
   0x0000000000001276 <+390>:	add    rax,rdi
   0x0000000000001279 <+393>:	cmp    edx,0x7ffffff
   0x000000000000127f <+399>:	jle    0x1270 <main+384>
   0x0000000000001281 <+401>:	add    rsi,0x4
   0x0000000000001285 <+405>:	cmp    rsi,r8
   0x0000000000001288 <+408>:	jne    0x1268 <main+376>
   0x000000000000128a <+410>:	call   0x1040 <clock@plt>
   0x000000000000128f <+415>:	sub    rax,r15
   0x0000000000001292 <+418>:	mov    r14,rax
   0x0000000000001295 <+421>:	call   0x10d0 <rand@plt>
   0x000000000000129a <+426>:	pxor   xmm0,xmm0
   0x000000000000129e <+430>:	mov    edx,ebx
   0x00000000000012a0 <+432>:	mov    rsi,r13
   0x00000000000012a3 <+435>:	and    eax,0x7ffffff
   0x00000000000012a8 <+440>:	test   r14,r14
   0x00000000000012ab <+443>:	mov    rdi,r12
   0x00000000000012ae <+446>:	mov    ecx,DWORD PTR [rbp+rax*4+0x0]
   0x00000000000012b2 <+450>:	lea    rax,[r14+0x1f]
   0x00000000000012b6 <+454>:	cmovns rax,r14
   0x00000000000012ba <+458>:	sar    rax,0x5
   0x00000000000012be <+462>:	cvtsi2sd xmm0,rax
   0x00000000000012c3 <+467>:	mov    eax,0x1
   0x00000000000012c8 <+472>:	divsd  xmm0,QWORD PTR [rip+0xd88]        # 0x2058
   0x00000000000012d0 <+480>:	call   0x1080 <fprintf@plt>
   0x00000000000012d5 <+485>:	lea    rdi,[rip+0xd71]        # 0x204d
   0x00000000000012dc <+492>:	xor    eax,eax
   0x00000000000012de <+494>:	mov    esi,ebx
   0x00000000000012e0 <+496>:	mov    edx,0x8000000
   0x00000000000012e5 <+501>:	call   0x1060 <printf@plt>
   0x00000000000012ea <+506>:	mov    rdi,rbp
   0x00000000000012ed <+509>:	call   0x1030 <free@plt>
   0x00000000000012f2 <+514>:	cmp    ebx,0x1f
   0x00000000000012f5 <+517>:	jle    0x124c <main+348>
   0x00000000000012fb <+523>:	cmp    ebx,0x7f
   0x00000000000012fe <+526>:	jg     0x1308 <main+536>
   0x0000000000001300 <+528>:	add    ebx,0x4
   0x0000000000001303 <+531>:	jmp    0x1151 <main+97>
   0x0000000000001308 <+536>:	add    ebx,ebx
   0x000000000000130a <+538>:	cmp    ebx,0x8000000
   0x0000000000001310 <+544>:	jle    0x1151 <main+97>
   0x0000000000001316 <+550>:	mov    rdi,r12
   0x0000000000001319 <+553>:	call   0x1050 <fclose@plt>
   0x000000000000131e <+558>:	add    rsp,0x8
   0x0000000000001322 <+562>:	xor    eax,eax
   0x0000000000001324 <+564>:	pop    rbx
   0x0000000000001325 <+565>:	pop    rbp
   0x0000000000001326 <+566>:	pop    r12
   0x0000000000001328 <+568>:	pop    r13
   0x000000000000132a <+570>:	pop    r14
   0x000000000000132c <+572>:	pop    r15
   0x000000000000132e <+574>:	ret    
   0x000000000000132f <+575>:	mov    rcx,QWORD PTR [rip+0x2d4a]        # 0x4080 <stderr@GLIBC_2.2.5>
   0x0000000000001336 <+582>:	mov    edx,0x14
   0x000000000000133b <+587>:	mov    esi,0x1
   0x0000000000001340 <+592>:	lea    rdi,[rip+0xccb]        # 0x2012
   0x0000000000001347 <+599>:	call   0x10c0 <fwrite@plt>
   0x000000000000134c <+604>:	jmp    0x112c <main+60>
End of assembler dump.
